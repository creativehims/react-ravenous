{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","props","business","imageSrc","name","address","city","state","zipCode","category","rating","reviewCount","className","src","alt","BusinessList","businesses","map","id","sortByOptions","SearchBar","searchYelp","useState","term","location","sortBy","searchQuery","setSearchQuery","useEffect","getSortByClass","sortByOption","Object","keys","sortByOptionValue","onClick","prev","handleSortByChange","placeholder","onChange","event","target","value","require","config","Yelp","search","fetch","headers","Authorization","process","response","ok","json","jsonResponse","console","log","filter","Boolean","image_url","address1","zip_code","categories","title","review_count","App","setBusinesses","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8228b57.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Business.css\";\n\nconst Business = (props) => {\n  const {\n    imageSrc,\n    name,\n    address,\n    city,\n    state,\n    zipCode,\n    category,\n    rating,\n    reviewCount,\n  } = props.business;\n  return (\n    <div className=\"Business\">\n      <div className=\"image-container\">\n        <img src={imageSrc} alt={name} />\n      </div>\n      <h2>{name}</h2>\n      <div className=\"Business-information\">\n        <div className=\"Business-address\">\n          <p>{address}</p>\n          <p>{city}</p>\n          <p>\n            {state} {zipCode}\n          </p>\n        </div>\n        <div className=\"Business-reviews\">\n          <h3>{category}</h3>\n          <h3 className=\"rating\">{rating} stars</h3>\n          <p>{reviewCount} reviews</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Business;\n","import React from \"react\";\nimport \"./BusinessList.css\";\nimport Business from \"../Business/Business\";\n\nconst BusinessList = (props) => {\n  return (\n    <div className=\"BusinessList\">\n      {props.businesses &&\n        props.businesses.map((business) => {\n          return <Business business={business} key={business.id} />;\n        })}\n    </div>\n  );\n};\n\nexport default BusinessList;\n","import React, { useEffect, useState } from \"react\";\nimport \"./SearchBar.css\";\n\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\",\n};\n\nconst SearchBar = (props) => {\n  const { searchYelp } = props;\n  const [searchQuery, setSearchQuery] = useState({\n    term: \"\",\n    location: \"\",\n    sortBy: \"best_match\",\n  });\n\n  useEffect(() => {\n    searchYelp(searchQuery.term, searchQuery.location, searchQuery.sortBy);\n  }, [searchQuery]);\n\n  const getSortByClass = (sortByOption) => {\n    return sortByOption === searchQuery.sortBy ? \"active\" : \"\";\n  };\n\n  const handleSortByChange = (sortByOption) => {\n    setSearchQuery((prev) => ({ ...prev, sortBy: sortByOption }));\n  };\n\n  const handleTermChange = (event) => {\n    setSearchQuery((prev) => ({ ...prev, term: event.target.value }));\n  };\n\n  const handleLocationChange = (event) => {\n    setSearchQuery((prev) => ({ ...prev, location: event.target.value }));\n  };\n\n  // const handleSearch = (event) => {\n  //   event.preventDefault();\n  //   searchYelp(searchQuery.term, searchQuery.location, searchQuery.sortBy);\n  // };\n\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map((sortByOption) => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return (\n        <li\n          key={sortByOptionValue}\n          className={getSortByClass(sortByOptionValue)}\n          onClick={() => handleSortByChange(sortByOptionValue)}\n        >\n          {sortByOption}\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className=\"SearchBar\">\n      <div className=\"SearchBar-sort-options\">\n        <ul>{renderSortByOptions()}</ul>\n      </div>\n      <div className=\"SearchBar-fields\">\n        <input placeholder=\"Search Businesses\" onChange={handleTermChange} />\n        <input placeholder=\"Where?\" onChange={handleLocationChange} />\n      </div>\n      {/* <div className=\"SearchBar-submit\">\n        <a onClick={handleSearch}>Let's Go</a>\n      </div> */}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","require('dotenv').config();\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst Yelp = {\n  async search(term, location, sortBy) {\n    try {\n      const response = await fetch(\n        `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n        {\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n          },\n        }\n      );\n\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        console.log(jsonResponse);\n        if (jsonResponse.businesses) {\n          return jsonResponse.businesses.filter(Boolean).map((business) => ({\n            id: business.id,\n            imageSrc: business.image_url,\n            name: business.name,\n            address: business.location.address1,\n            city: business.location.city,\n            state: business.location.state,\n            zipCode: business.location.zip_code,\n            category: business.categories[0].title,\n            rating: business.rating,\n            reviewCount: business.review_count,\n          }));\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n\nexport default Yelp;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Yelp from \"../../util/Yelp\";\n\nconst App = () => {\n  const [businesses, setBusinesses] = useState([]);\n\n  const searchYelp = async (term, location, sortBy) => {\n    const businesses =\n      term && location && sortBy && (await Yelp.search(term, location, sortBy));\n    businesses &&\n      console.log(`Searching Yelp with ${term}, ${location}, ${sortBy}`);\n    setBusinesses(businesses);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ravenous</h1>\n      <SearchBar searchYelp={searchYelp} />\n      <BusinessList businesses={businesses} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}